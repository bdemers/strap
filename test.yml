---
- name: run the playbook tasks on the localhost
  hosts: 127.0.0.1
  connection: local
  vars:
    node_version: 8.11.1
    nvm_version: 0.33.11
    npm_version: 5.6.0
    yarn_version: 1.7.0
  environment:
    NVM_DIR: /root/.nvm
    YARN_DIR: /root/.yarn
    PATH: /root/.yarn/bin:/root/.nvm/versions/node/v{{ node_version }}/bin:{{ ansible_env.PATH }}
  become: yes
  tasks: 
  - name: Fetch Java version
    shell: java -version 2>&1 | grep version | awk '{print $3}' | sed 's/"//g'
    register: java_version

  - assert:
      that: 
        - java_version.stdout | version_compare('1.7', '>=')

  - name: Download the nvm(node version manager) install script
    shell: curl -o- https://raw.githubusercontent.com/creationix/nvm/v{{ nvm_version }}/install.sh | bash

  - name: Register the NVM_DIR
    shell: cd /root && mkdir -p /root/.nvm
    become_user: root

  - name: Install the specified node version using the nvm command and set it as default
    shell: . $NVM_DIR/nvm.sh && nvm install {{ node_version }} && nvm use {{ node_version }} && npm config set prefix=/root/.nvm/versions/node/v{{ node_version }}/bin && npm install npm@{{ npm_version }} -g --user "root" && nvm alias default {{ node_version }} && nvm use default
    become_user: root

  - name: Fetch npm version
    shell: npm -v
    register: npmVersion

  - name: Fetch node version
    shell: node -v
    register: nodeVersion

  - name: Download yarn
    shell: curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version {{ yarn_version }}

  - name: Install yarn
    shell: yarn install --mutex network 

  - name: Install grunt
    shell: yarn config set strict-ssl false && yarn global add grunt-cli@1.2.0 --mutex network

  - name: Fetch yarn version
    shell: yarn --version
    register: yarnVersion

  - assert:
      that:
        - npmVersion.stdout | version_compare('{{ npm_version }}', '==')
        - nodeVersion.stdout | version_compare('v{{ node_version }}', '==')
        - yarnVersion.stdout | version_compare('{{ yarn_version }}', '==')