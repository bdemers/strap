#!/usr/bin/env bash
# Summary: Runs strap to ensure your machine is fully configured
# Usage: strap run

# This script was initially based on Mike McQuaid's strap project, but now has a ton of changes:
# https://github.com/MikeMcQuaid/strap

set -Eeuo pipefail # https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/

STRAP_DEBUG="${STRAP_DEBUG:-}" && [ -n "$STRAP_DEBUG" ] && set -x
SUDO_PID="${SUDO_PID:-}"
command -v 'strap::lib::import' >/dev/null || { echo "strap::lib::import is not available" >&2; exit 1; }
strap::lib::import io || source ../lib/io.sh
strap::lib::import logging || source ../lib/logging.sh
strap::lib::import sudo || source ../lib/sudo.sh

STRAP_DEBUG="${STRAP_DEBUG:-}"
STRAP_SCRIPT="${STRAP_SCRIPT:-}" && [[ -z "$STRAP_SCRIPT" ]] && echo "STRAP_SCRIPT is not set" && exit 1
STRAP_HOME="${STRAP_HOME:-}" && [[ -z "$STRAP_HOME" ]] && echo "STRAP_HOME is not set" && exit 1
STRAP_USER_HOME="${STRAP_USER_HOME:-}" && [[ -z "$STRAP_USER_HOME" ]] && echo "STRAP_USER_HOME is not set" && exit 1
STRAP_COMMANDS_DIR="${STRAP_COMMANDS_DIR:-}" && [[ -z "$STRAP_COMMANDS_DIR" ]] && echo "STRAP_COMMANDS_DIR is not set" && exit 1
STRAP_LIB_DIR="${STRAP_LIB_DIR:-}" && [[ -z "$STRAP_LIB_DIR" ]] && echo "STRAP_LIB_DIR is not set" && exit 1

CLT_PLACEHOLDER="${CLT_PLACEHOLDER:-}"
STRAP_STEP=''
STRAP_SUCCESS=''
STRAP_QUIET_FLAG="-q"
Q="$STRAP_QUIET_FLAG"

# Are we running interactive?
STRAP_INTERACTIVE='' # assume not interactive by default
[[ -t "0" || -p /dev/stdin ]] && STRAP_INTERACTIVE="1" # we're interactive

stopsudo() {
    kill "$SUDO_PID"
    trap - SIGINT SIGTERM
    sudo -k
}

startsudo() {
    sudo -v
    ( while true; do sudo -vn; sleep 50; kill -0 "$$" || exit; done; ) &
    SUDO_PID="$!"
    trap stopsudo SIGINT SIGTERM
}

#cleanup() {
#  set +e
#  rm -f "$CLT_PLACEHOLDER"
#  if [ -z "$STRAP_SUCCESS" ]; then
#    if [ -n "$STRAP_STEP" ]; then
#      echo "!!! $STRAP_STEP FAILED" >&2
#    else
#      echo "!!! FAILED" >&2
#    fi
#    if [ -z "$STRAP_DEBUG" ]; then
#      echo "!!! Run '$0 --debug' for debugging output." >&2
#      echo "!!! If you're stuck: file an issue with debugging output at:" >&2
#      echo "!!!   $STRAP_ISSUES_URL" >&2
#    fi
#  fi
#}
## Trap any exit call:
#trap 'cleanup' EXIT

STRAP_GIT_NAME="$(id -F)"
STRAP_GIT_EMAIL=
STRAP_GITHUB_USER=
STRAP_GITHUB_TOKEN=
STRAP_ISSUES_URL="https://github.com/ultimatedotfiles/strap/issues/new"

echo -e "\n${FONT_BOLD}Bootstrapping your machine. Here we go!${FONT_CLEAR}"

#abort() { STRAP_STEP="";   echo "!!! $*" >&2; exit 1; }
#log()   { STRAP_STEP="$*"; echo "--> $*"; }
#logn()  { STRAP_STEP="$*"; printf -- "--> $* "; }

println() {
  local file="${1:-}"
  local msg="${2:-}"
  echo "$msg" >> "$file"
}

[ "$USER" = "root" ] && strap::abort "Run 'strap run' as yourself, not root."
groups | grep $Q admin || strap::abort "Add $USER to the admin group."

# Initialize sudo access:
strap::sudo::enable
#startsudo

#############################################################
# Shell RC File assertions:
#############################################################

strap::bot "Checking shell init files"
STRAP_SHELL=$(basename "$SHELL")
STRAP_SHELL_INIT_FILE="${STRAP_USER_HOME:-}/straprc"

strap::running "Checking $STRAP_SHELL_INIT_FILE exists"
if [ ! -f "$STRAP_SHELL_INIT_FILE" ]; then
  echo && strap::action "Creating $STRAP_SHELL_INIT_FILE"
  cp "$STRAP_HOME/etc/profile.d/straprc" "$STRAP_USER_HOME/straprc"
fi
strap::ok

declare -a files=("$HOME/.bash_profile" "$HOME/.zshrc")
for file in "${files[@]}"; do

  strap::running "Checking $file exists"
  [ ! -f "$file" ] && echo && strap::action "Creating $file" && touch "$file"
  chmod u+x "$file"
  strap::ok

  strap::running "Checking $STRAP_SHELL_INIT_FILE referenced in $file"
  if ! grep -q "$STRAP_SHELL_INIT_FILE" "$file"; then
    strap::action "Enabling $STRAP_SHELL_INIT_FILE in $file"
    println "$file" ''
    println "$file" '# strap:begin'
    println "$file" "[ -f \"$STRAP_SHELL_INIT_FILE\" ] && . \"$STRAP_SHELL_INIT_FILE\""
    println "$file" '# strap:end'
  fi
  strap::ok
done

#############################################################
# Homebrew:
#############################################################
#"$STRAP_HOME/plugins/brew/bin/run"

#strap::lib::import brew brew || . ../plugins/brew/lib/brew.sh

# make config/state a little more secure, just in case:
chmod -R go-rwx "$STRAP_USER_HOME"

STRAP_SUCCESS="1"
printf "\n${FONT_BOLD}${FONT_GREEN}SUCCESS - Your system is now Strap'd!${FONT_CLEAR}\n\n"

#strap::sudo::cleanup